/*                                 VISTAS 

Sintaxis para crear una vista: 
	create view NOMBREVISTA as
					SENTENCIASSELECT
							from TABLA;
EL contenido se muestra con un SELECT * FROM [NOMBRE VISTA]

*/
USE CURSOSQLSERVER;
GO

EXEC sp_tables @table_owner = 'dbo';
GO 

exec sp_columns empleados;
GO

--Ejercicio 1 
IF OBJECT_ID('INSCRIPTO') IS NOT NULL
	DROP TABLE inscriptos;
GO

IF OBJECT_ID('SOCIOS') IS NOT NULL
	DROP TABLE SOCIOS; 
GO

IF OBJECT_ID ('PROFESORES') IS NOT NULL
	DROP TABLE PROFESORES;
GO

IF OBJECT_ID('CURSOS') IS NOT NULL
	DROP TABLE CURSOS;
GO

CREATE TABLE SOCIOS
(
	DOCUMENTO CHAR(8) NOT NULL,
	NOMBRE VARCHAR(40),
	DOMICILIO VARCHAR(30),
	CONSTRAINT PK_SOCIOS_DOCUMENTO PRIMARY KEY(DOCUMENTO)
);
GO

CREATE TABLE PROFESORES
(
	DOCUMENTO CHAR(8) NOT NULL PRIMARY KEY CLUSTERED,
	NOMBRE VARCHAR(40),
	DOMICILIO VARCHAR(30),
);
GO

CREATE TABLE CURSOS
(
	NUMERO TINYINT IDENTITY,
	DEPORTE VARCHAR(20),
	DIA VARCHAR(15),
	DOCUMENTOPROFESOR char(8)
);

ALTER TABLE CURSOS ADD CONSTRAINT CK_DIA
CHECK (DIA IN ('LUNES', 'MARTES', 'MIERCOLES', 'JUEVES', 'VIERNES', 'SABADOS'))
GO

ALTER TABLE CURSOS ADD CONSTRAINT PK_NUMEROCURSO
PRIMARY KEY CLUSTERED(NUMERO);
GO

CREATE TABLE INSCRIPTOS
(
	DOCUMENTOSOCIO CHAR(8) NOT NULL,
	NUMERO TINYINT NOT NULL,
	MATRICULA CHAR(1),
	CONSTRAINT CK_INSCRIPTOS_MATRICULA CHECK (MATRICULA IN ('S','N')),
	CONSTRAINT PK_INSCRIPTOS_DOCUMENTO_NUMERO
	PRIMARY KEY(DOCUMENTOSOCIO,NUMERO)
);
GO

--INSERTING VALUES INTO TABLE SOCIOS 
INSERT INTO SOCIOS VALUES ('30000000','FABIAN FUENTES','CASEROS 987');
INSERT INTO SOCIOS VALUES ('31111111','GASTOS GARCIA','GUEMES 65');
INSERT INTO SOCIOS VALUES ('32222222','HECTOR HUERTA', 'SUCRE 534');
INSERT INTO SOCIOS VALUES ('33333333','INES IRALA', 'BULNES 345');
GO

--INSERTING VALUES INTO TABLE PROFESORES
INSERT INTO PROFESORES VALUES('22222222','Ana Acosta','Avellaneda 231');
INSERT INTO PROFESORES VALUES('23333333','Carlos Caseres','Colon 245');
INSERT INTO PROFESORES VALUES('24444444','Daniel Duarte','Sarmiento 987');
INSERT INTO PROFESORES VALUES('25555555','Esteban Lopez','Sucre 1204');
GO

--INSERTING VALUES INTO TABLE CURSOS
INSERT INTO CURSOS VALUES ('tenis','lunes','22222222');
INSERT INTO CURSOS VALUES ('tenis','martes','22222222');
INSERT INTO CURSOS VALUES ('natacion','miercoles','22222222');
INSERT INTO CURSOS VALUES ('natacion','jueves','23333333');
INSERT INTO CURSOS VALUES ('natacion','viernes','23333333');
INSERT INTO CURSOS VALUES ('futbol','sabado','24444444');
INSERT INTO CURSOS VALUES ('futbol','lunes','24444444');
INSERT INTO CURSOS VALUES ('basquet','martes','24444444');
GO

--INSERTING VALUES INTO TABLE INSCRIPTOS
INSERT INTO INSCRIPTOS VALUES ('30000000',1,'s');
INSERT INTO INSCRIPTOS VALUES ('30000000',3,'n');
INSERT INTO INSCRIPTOS VALUES ('30000000',6,null);
INSERT INTO INSCRIPTOS VALUES ('31111111',1,'s');
INSERT INTO INSCRIPTOS VALUES ('31111111',4,'s');
INSERT INTO INSCRIPTOS VALUES ('32222222',8,'s');
GO

--DELETING VIEW CLUB IF EXIST 
IF OBJECT_ID('VISTA_CLUB') IS NOT NULL
	DROP VIEW VISTA_CLUB;
GO

--Cree una vista en la que aparezca el nombre y documento del socio, el deporte, el día y el nombre  del profesor.
CREATE VIEW VISTA_CLUB AS
		SELECT S.NOMBRE AS 'NOMBRE SOCIO', S.DOCUMENTO AS 'DOCUMENTO SOCIO',
			C.DEPORTE AS 'DEPORTE' , C.DIA AS 'DIA', P.NOMBRE AS 'NOMBRE PROFESOR'
				FROM SOCIOS AS S FULL JOIN INSCRIPTOS AS I ON S.DOCUMENTO = I.DOCUMENTOSOCIO
				FULL JOIN CURSOS AS C ON I.NUMERO = C.NUMERO
				FULL JOIN PROFESORES AS P ON C.DOCUMENTOPROFESOR = P.DOCUMENTO;
GO

--Cree una vista encriptada en la que aparezca el nombre y documento del socio, el deporte, el día y el nombre  del profesor .
CREATE VIEW VISTA_CLUB 
	with encryption
	AS
		SELECT S.NOMBRE AS 'NOMBRE SOCIO', S.DOCUMENTO AS 'DOCUMENTO SOCIO',
			C.DEPORTE AS 'DEPORTE' , C.DIA AS 'DIA', P.NOMBRE AS 'NOMBRE PROFESOR'
				FROM SOCIOS AS S FULL JOIN INSCRIPTOS AS I ON S.DOCUMENTO = I.DOCUMENTOSOCIO
				FULL JOIN CURSOS AS C ON I.NUMERO = C.NUMERO
				FULL JOIN PROFESORES AS P ON C.DOCUMENTOPROFESOR = P.DOCUMENTO;
GO
--Muestre la información contenida en la vista.
select * from VISTA_CLUB
GO

--Realice una consulta a la vista donde muestre la cantidad de socios inscriptos 
--en cada deporte  ordenados por cantidad.
select DEPORTE,DIA,count([NOMBRE SOCIO]) as cantidad
  from vista_club
  where deporte is not null
  group by deporte,dia
  order by cantidad;
GO

--Muestre (consultando la vista) los cursos (deporte y día) para los cuales no 
--hay inscriptos
SELECT DEPORTE, DIA FROM VISTA_CLUB 
WHERE [DOCUMENTO SOCIO] IS NULL and DEPORTE is not null
GO

--Muestre los nombres de los socios que no se han inscripto en ningún curso (consultando la vista)
SELECT [NOMBRE SOCIO] FROM VISTA_CLUB WHERE DEPORTE IS NULL AND [NOMBRE SOCIO] IS NOT NULL
GO

--Muestre (consultando la vista) los profesores que no tienen asignado ningún deporte aún.
SELECT [NOMBRE PROFESOR] FROM VISTA_CLUB WHERE DEPORTE IS NULL 
AND [NOMBRE PROFESOR] IS NOT NULL;
GO

--Procedimientos almacenados importantes Y ELIMINADO DE VISTAS 
exec sp_help -- muestra todos los objetos de la base de datos
exec sp_help VISTA_CLUB
exec sp_helptext VISTA_CLUB
exec sp_depends VISTA_CLUB
--ELIMINANDO VISTA 
DROP VIEW VISTA_CLUB;
GO